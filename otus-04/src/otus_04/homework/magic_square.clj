(ns otus-04.homework.magic-square)

;; Оригинальная задача:
;; https://www.codewars.com/kata/570b69d96731d4cf9c001597
;;
;; Подсказка: используйте "Siamese method"
;; https://en.wikipedia.org/wiki/Siamese_method

(defn magic-square
  "Функция возвращает вектор векторов целых чисел,
  описывающий магический квадрат размера n*n,
  где n - нечётное натуральное число.

  Магический квадрат должен быть заполнен так, что суммы всех вертикалей,
  горизонталей и диагоналей длиной в n должны быть одинаковы."
  [n]
  {:pre [(odd? n)]}
  (->> ;; Список чисел, которые нужно вписать в квадрат.
       (range 1 (inc (* n n)))
       ;; Заполняем квадрат. В первом элементе функции внутри reduce передаем
       ;; сам квадрат и координату клетки, которую нужно заполнить на данном
       ;; шаге. Сам квадрат представлен в виде мапы, где ключем являются координаты
       ;; клетки, а значением - число в ней.
       (reduce (fn [[square [x y :as point]] i]
                 [(assoc square point i)
                  (let [diag-point [(mod (inc x) n)
                                    (mod (dec y) n)]]
                    ;; Выбираем следующую клетку. Если вверх по диагонали
                    ;; занята, спускаемся вниз.
                    (if (square diag-point)
                      [x (mod (inc y) n)]
                      diag-point))])
               [{} [(quot n 2) 0]])
       ;; Оставляем только мапу с координатами и значениями.
       first
       ;; Сортировка расположит элементы в порядке возрастания
       ;; координат, сначала по x, потом по y. 
       sort
       ;; Оставляем только значения, координаты больше не нужны.
       (map second)
       ;; Разбиваем по строкам.
       (partition n)
       ;; Преобразуем ленивую последовательность в вектор векторов.
       (map vec)
       vec))
